=head1 NAME

cwb-decode - Utility for decoding a CWB corpus into various text formats

=head1 SYNOPSIS

B<cwb-decode> (-L|-H|-C|-Cx|-X) [-n] [-r I<registry_dir>]
    [-s I<start>] [-e I<end>] [-p | -f I<file>]
    I<corpus>  [-c I<attribute>] [-ALL]
    (-P I<attribute>|-S I<attribute>|-V I<attribute>|-A I<attribute>)+

=head1 DESCRIPTION

B<cwb-decode> extracts an encoded CWB corpus as plain text (or in various other text formats). 

In normal mode, the entire corpus (or a segment specified with the C<-s> and C<-e> options) 
is printed.

In matchlist mode (C<-p> or C<-f>), (pairs of) corpus positions are read from standard input 
or a file specified with C<-f>, and the corresponding tokens or ranges are displayed. 

In either case, the output is to standard output; any accompanying error or wanring messages are printed to
standard error. 

The attribute declaration flags C<-P>, C<-S>, C<-V> and C<-A> determine which attributes will be printed; 
use C<-ALL> for all attributes. 

See L<"OUTPUT FORMATS"> below for available output modes. If no output format is specified, Standard format will
be used.

Command-line B<options> (which control the output format, range of corpus positions, etc.) 
must be specified before the I<corpus> name, while B<attribute declarations> (which select attributes 
to be displayed) must follow the I<corpus> name. The corpus name is compulsory, and
must be given in the ALL-UPPERCASE version.

B<cwb-decode> will look for the specified corpus in the registry directory, as usual. If a registry
location is not specified with the B<-r> option, then either a directory specified by the CORPUS_REGISTRY
environment variable, or CWB's built-in default registry will be used.




=head1 OPTIONS

Please note that no CWB programs currently support GNU-style C<--long-options>.

=over 4

=item B<-C>

Activates compact output mode (suitable for piping to B<cwb-encode>).

=item B<-Cx>

Activates XML-compatible compact output mode (for C<cwb-encode -x ...>).

=item B<-e> I<end>

Specifies the end point (inclusive) for output; the last token printed will be corpus position I<end>.

=item B<-f> I<file>

Activates matchlist mode (with input from I<file>).

=item B<-h>

Displays B<cwb-decode>'s help message, with short information about the usage of the command line options.  
This usage message will be also shown if B<cwb-decode> is called with invalid options.
After the usage message is printed, B<cwb-decode> will exit.

=item B<-H>

Activates concordance line ('horizontal') output mode.

=item B<-L>

Activates Lisp output mode.

=item B<-n>

Activates printing of corpus positions ("numbers") alongside each token. The precise format of the corpus
positions depends on which output mode is activated. For instance, they will appear as attribute values
in XML mode; as line-start labels in standard mode.

=item B<-p>

Activates matchlist mode (with input from standard input).

=item B<-r> I<registry_dir>

Specifies that the registry directory should be I<registry_dir> on startup,
instead of the standard registry. If this option is not specified, then a directory 
specified by the CORPUS_REGISTRY environment variable will be used; if that is not available, 
the built-in CWB default will be used.

=item B<-s> I<start>

Specifies the start point for output; the first token printed will be corpus position I<start>.

=item B<-X>

Activates XML output mode.

=back


=head1 ATTRIBUTE DECLARATIONS

=item B<-P> I<attribute>

Declares that p-attribute I<attribute> should be printed.

=item B<-S> I<attribute>

Declares that s-attribute I<attribute> should be printed 
(possibly including annotations, if they are present).

=item B<-V> I<attribute>  

In matchlist mode only, declares that the s-attribute annotation for each input range should be printed.
Note that it does not normally make sense to declare the same s-attribute with both B<-S> and B<-V>.

=item B<-A> I<attribute>

Declares that a-attribute I<attribute> should be printed.

=item B<-ALL>

Declares that all p-attributes and s-attributes should be printed. 
A-attributes must still be added manually, if required.


=item B<-c> I<attribute>

Sets a context attribute. In matchlist mode only, each range will be expanded to a full containing I<attribute> region.

=over 4

=item B<TODO>

=back


=head1 OUTPUT FORMATS

=over 4

=item B<Standard output>

This output mode is used if no other mode is explicitly specified.

Each token is printed on a separate line.

End tags are not printed for s-attributes and a-attributes.


=item B<Compact output>

This output format is designed so that it can also serve as input to B<cwb-encode>.


=item B<XML-compatible compact output>


=item B<Concordance-line ("horizontal") output>

Tokens are separated by spaces. In matchlist mode, sequences of tokens are separated by newline
characters. 


=item B<Lisp output mode>

All data structures are represented as well-formed list objects in B<(>parenthesesB<)>. 

P-attribute values are given in the form C<(I<attribute_name> I<attribute_value>)>. These are, in
turn, contained in C<(token ...)> structures.

In matchlist mode with a cno
The token (in normal mode) or set of tokens (in matchlist mode) is cotnained in a C<(TARGET ...)> structure.

In matchlist mode, each C<(TARGET ...)> 

In matchlist mode, each sequence of matches begins with a C<CONTEXT I<from_cpos> I<to_cpos>)> structure.


=item B<XML output>

An XML declaration is given at the start of the output.

The whole output is wrapped in a C<<corpus>> tag, or a C<<matchlist>> tag with groups of C<<match>> tags in matchlist mode.

Each token is contained in a C<<token>> element.

Token numbers, where requested, are given as C<cpos> attributes on C<<token>> elements.

In matchlist mode, the values of "surrounding" s-attributes declared with B<-V> 
are given before the contents of each match, in the form C<<element name="..." value="..."/>> . 

In matchlist mode, if extended context is requested with the B<-c> declaration, this is shown in the form
C<<context start="I<cpos>" end="I<cpos>"/>> .


=back


=head1 ENVIRONMENT

=over 4

=item B<CORPUS_REGISTRY>

If set, this environment variable specifies the location of the corpus registry directory. 
The CORPUS_REGISTRY is overruled by the B<-r> option, if present; if neither of these means
of specifying the registry is used, then the built-in CWB default registry location will be used.

=back


=head1 SEE ALSO

L<cqp>, L<cqpserver>, L<cwb-align-encode>, L<cwb-align>, L<cwb-align-show>, L<cwb-atoi>, L<cwb-compress-rdx>, 
L<cwb-config>, L<cwb-decode-nqrfile>, L<cwb-describe-corpus>, L<cwb-encode>, L<cwb-huffcode>, 
L<cwb-itoa>, L<cwb-lexdecode>, L<cwb-makeall>, L<cwb-scan-corpus>, L<cwb-s-decode>, L<cwb-s-encode>.

=head1 COPYRIGHT

=over 4

=item
B<IMS Open Corpus Workbench (CWB)> L<http://cwb.sourceforge.net/>

=item
Copyright (C) 1993-2006 by IMS, University of Stuttgart

=item
Copyright (C) 2007- by the respective contributers (see file F<AUTHORS>)

=back

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details
(in the file F<COPYING>, or available via WWW at
L<http://www.gnu.org/copyleft/gpl.html>).

=cut

